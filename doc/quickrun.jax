*QuickRun.txt* コマンドを素早く実行します。

Version: 0.0.4
Author : thinca <http://d.hatena.ne.jp/thinca/>
License: クリエイティブ・コモンズの表示 2.1 日本ライセンス
         <http://creativecommons.org/licenses/by/2.1/jp/>


==============================================================================
概要						*QuickRun-introduction*

*QuickRun* は編集中のファイルの全体もしくは一部を実行する Vim プラグインです。
実行するためのコマンド |:QuickRun| が提供されます。

						*QuickRun-synopsis*
>
	" 現在のバッファを実行
	:QuickRun

	" 現在のバッファの3行目から6行目までを実行
	:3,6QuickRun

	" 現在のバッファを perl プログラムとして実行
	:QuickRun perl

	" ruby プログラムとしてソースとなる文字列を指定して実行
	:QuickRun ruby -src 'puts "Hello, world!"'


	" (vimrc にて) haskell を実行するプログラムのデフォルトを hugs にする
	if !exists('g:QuickRunConfig')
		let g:QuickRunConfig = {}
		let g:QuickRunConfig.haskell = {'command' : 'runhugs'}
	endif

	" ショートカットキーを設定する
	for [key, com] in items({
	\   '<Leader>x' : '>:',
	\   '<Leader>p' : '>!',
	\   '<Leader>w' : '>',
	\   '<Leader>q' : '>>',
	\ })
		execute 'nnoremap <silent>' key ':QuickRun' com '-mode n<CR>'
		execute 'vnoremap <silent>' key ':QuickRun' com '-mode v<CR>'
	endfor
<

==============================================================================
インターフェース				*QuickRun-interface*

------------------------------------------------------------------------------
コマンド					*QuickRun-commands*

						*:QuickRun*
:[range]QuickRun [{type}] [<{input}] [>[>][{output}]] [-option value]...
	プログラムを実行します。実行する際にオプションを指定できます。指定でき
	るオプションについては |QuickRun-options| を参照してください。
	オプションは名前と値の組で、
>
	-オプション名 値
<
	で指定します。必要な数だけ指定できます。全てのオプションは順不同です。
	値に空白文字を含む場合、シングルクォートかタブルクォートでくくることで
	指定できます。更に内側にシングルクォートかダブルクォートを含めたい場合
	は、バックスラッシュでエスケープしてください。

	{type} は、-type {type} の省略形です。
	<{input} は、-input {input} の省略形です。
	>{output} は、-output {output} の省略形です。
	>>{output} は、-append 1 -output {output} の省略形です。

	range に実行する範囲を指定します。指定しなかった場合はファイル全体を指
	定したことになります。'<,'>を指定して mode オプション
	(|QuickRun-option-mode|)を指定しなかった場合はビジュアル選択された部分
	が対象になります。この場合矩形選択なども有効です。ただし、キーマッピン
	グからコマンドを実行する場合はビジュアルモードかどうか自動で判断できな
	いのでキーマッピング内で mode オプションを指定して実行するようにしてく
	ださい。


------------------------------------------------------------------------------
関数				*QuickRun-functions* *QuickRun-operator*

QuickRun({type})
			'operatorfunc' に対して設定するための関数です。
			例えば、 >
		nnoremap <silent> <C-CR> :<C-u>set opfunc=QuickRun<CR>g@ip
<			これは、<C-CR> で現在の段落(|ip|)を実行します。


------------------------------------------------------------------------------
キーマッピング					*QuickRun-keymappings*

<Plug>(QuickRun-op)				*<Plug>(QuickRun-op)*
			続くモーションの範囲を実行します。これは
			'operatorfunc' の値を "QuickRun" に変更します。


==============================================================================
オプション					*QuickRun-options*
コマンドラインで指定するオプションのリストです。省略したオプションは
|g:QuickRunConfig| で設定しているものが使用されます。(*) が付いているものにつ
いては |QuickRun-expand-option| を参照してください。

type					*QuickRun-option-type*
			設定の雛形を指定します。デフォルトで 'filetype' の値が
			使用されます。詳細は |g:QuickRunConfig| を参照してくだ
			さい。

exec (*)				*QuickRun-option-exec*
			実行するコマンドの書式を指定します。詳細
			は|QuickRun-exec-format| を参照してください。複数の値
			を指定することも可能です。

command					*QuickRun-option-command*
			exec 内の %c に展開される文字列です。指定されなかった
			場合は、type と同じ値が使用されます。

src					*QuickRun-option-src*
			実行するプログラムのソースとなる文字列を指定します。デ
			フォルトでは編集中のファイル全体ですが、指定することで
			変更が可能です。

args					*QuickRun-option-args*
			exec の %a に展開される文字列です。

input (*)				*QuickRun-option-input*
			標準入力に流し込むファイルを指定します。先頭が = で始
			まっていた場合、それ以降の文字列を入力として扱います。
			この場合のみ文字列は |QuickRun-expand-option| で展開さ
			れます。

output					*QuickRun-option-output*
			結果の出力方法を指定します。
			- 何も指定しないか空文字列を指定すると、出力専用バッファ
			  を開いてそこへ出力します。このバッファは同じものが再
			  利用されます。また、このバッファにはカスタマイズのた
			  めに 'filetype' に "quickrun" が設定されます。
			- ! を指定すると、シェルで直接実行します。
			- : を指定すると、|hit-enter-prompt| に出力します。
			  append を有効にした場合、|message-history| に記録し
			  ます。
			- ={var} を指定すると、{var} に指定した変数、オプショ
			  ン、環境変数へ出力します。
			- それ以外の場合はファイルに出力します。

append					*QuickRun-option-append*
			0 以外が指定された場合、(可能ならば)出力先に対して追記
			します。

split (*)				*QuickRun-option-split*
			出力専用バッファを開く際の補助コマンドを指定します。バ
			ッファを開く際に |:split| コマンドの前に挿入されます。
			|:tab| も指定できますが、タブページ内に出力専用バッフ
			ァが存在しない場合常に新しく開くのでおすすめしません。
			デフォルトは
			'{winwidth(0) * 2 < winheight(0) * 5 ? "" : "vertical"}'
			です。

mode					*QuickRun-option-mode*
			実行モードです。n,v,o のいずれかを指定します。これは範
			囲をどのように取得するかに影響します。ただし、多くの場
			合は自動で設定されるので必要ありません。
			キーマッピングからコマンド全体を入力する場合に指定が必
			要です。
			例: >
				nnoremap <silent> <F5> :QuickRun -mode n<CR>
				vnoremap <silent> <F5> :QuickRun -mode v<CR>

output_encode (*)			*QuickRun-option-output_encode*
			出力の文字コードを変換したい場合に、 "from:to" の形式
			で指定します。
			デフォルトは "&fenc:&enc" です。

shebang					*QuickRun-option-shebang*
			0 以外を指定すると、 src の最初の行が #! で始まってた
			場合にその後続の文字列を command として扱います。
			デフォルトは 1 です。

tempfile (*)				*QuickRun-option-tempfile*
			ブログラムを実行する際、現在のバッファ全体を実行する以
			外の場合は、ソースファイルを一時ファイルに書き出して実
			行します。その際の一時ファイル名を指定します。
			一時ファイルは実行する度に削除されます。
			デフォルトは "{tempname()}" です。

shellcmd				*QuickRun-option-shellcmd*
			output が ! の時に実行する Vim コマンドのテンプレート
			です。%s が exec オプションで生成されたコマンドに置換
			されます。
			デフォルトは MS Windows の場合は
			'silent !"%s" & pause' それ以外の場合は '!%s' です。


------------------------------------------------------------------------------
オプション値の展開				*QuickRun-expand-option*

いくつかの設定は、実行時に中身の一部が置換されます。(*) がついている設定は、
@,&,$で始まる単語をそれぞれレジスタ、オプション、環境変数として展開します。曖
昧さを避ける為、単語を{}で囲っても良いです。
例: >
	@a
	&{fileencoding}
	$PATH
	{expr}
{}を使用すると中身は |eval()| によって評価されます。展開を避けたい場合は、展開
される部分を \ でエスケープしてください。


------------------------------------------------------------------------------
exec オプションの書式				*QuickRun-exec-format*

実際に実行するコマンドのフォーマットを指定します。フォーマットには以下のシンボ
ルが使えます。同じシンボルを複数指定することも可能です。

シンボル	展開値 ~
--------        ------
%%		%自身
%c		コマンド
%s		ソースファイル
%S		ソースファイル(エスケープなし)
%a		スクリプトの引数

ファイルを指定するシンボルには、|filename-modifiers| が使えます。
>
	java %S:r:gs?[/\\]?.?
<
また、ファイルを指定するシンボルは |shellescape()| でエスケープされます。

Vim のコマンドを実行する
------------------------
exec を展開した結果先頭の文字が ":" だった場合、Vim のコマンドとして実行されま
す。また、この場合ファイルを指定するシンボルは |fnameescape()| でエスケープさ
れます。

複数のコマンドを指定する
------------------------
|:QuickRun| コマンドに exec オプションを複数回指定したり、 |g:QuickRunConfig|
の exec にリストを指定した場合、先頭から順に実行します。コンパイルや後始末が必
要な場合に便利です。


==============================================================================
設定					*QuickRun-settings* *g:QuickRunConfig*

type オプション(|QuickRun-option-type|)が指定された場合(指定されなかった場合は
'filetype' が指定されたことにまります)、グローバル変数|g:QuickRunConfig| に設
定してある値がオプションのデフォルトとして使用されます。この変数は辞書で、以下
の形式になっています。

g:QuickRunConfig[type] に、タイプ毎のオプションのデフォルト値を辞書形式で指定
します。
g:QuickRunConfig['*'] に、全てのタイプでのデフォルトを辞書形式で指定します。

全体共通の設定よりタイプ毎の設定が、タイプ毎の設定よりコマンドで指定された引数
が優先されます。

この設定のデフォルト値はプラグインのロード時に自動的に構築されます。その際に
(.vimrc などで) すでに定義されていた場合は、デフォルト値に既存値を上書きする形
で初期化されます。


==============================================================================
TODO						*QuickRun-TODO*

9 エラー処理見直し
6 直前の結果を出力する(消えてしまったものをもう一度見たいときのため)
5 args 複数指定
4 eval対応
3 出力形式の追加(置換)
1 標準エラー出力対応?
1 非同期実行(可能ならば)


==============================================================================
更新履歴					*QuickRun-changelog*

0.0.4	2009-07-30
	- 引数なしで実行した場合、filetype が認識されないバグを修正。
	- shellcmd オプション (QuickRun-option-shellcmd) を追加。
	- ファイルに対して出力する機能を追加。

0.0.3	2009-06-12
	- |g:QuickRunConfig| の初期化がうまくいかないバグを修正。
	- |QuickRun-option-split| の初期値を変更。
	- コマンドから |QuickRun-option-exec| を複数指定できるようにした。

0.0.2	2009-06-10
	- 引数の処理方法を変更。
	- <{input} が動かないバグを修正。
	- オプションの展開処理を改善。
	- 出力専用バッファの開き方を制御する "split" オプションを追加。
	- "type" オプションの値が |g:QuickRunConfig| になくても動くように修正。

0.0.1	2009-06-01
	- 初版。


==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
